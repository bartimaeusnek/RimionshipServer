@model GraphConfigurator

<table class="table table-bordered">
	<thead class="table-dark">
		<tr>
			<th scope="col">Name</th>
			<th scope="col">Wert</th>
			<th scope="col">Zeiteinstellung</th>
            <th scope="col">Intervall (sek)</th>
            <th scope="col">Spieler</th>
			<th scope="col">Link</th>
			<th scope="col">Aktion</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var modelAllowedMod in Model.AllGraphs)
		{
			<tr>
				<td>
					@modelAllowedMod.Accesscode
				</td>
				<td>
					@(GraphConfigurator.StatsName(modelAllowedMod.Statt))
				</td>
                <td>
                    @if (modelAllowedMod.Autorefresh)
                    {
                        var last = modelAllowedMod.End - modelAllowedMod.Start;
                        @($"Letzte {Math.Round(last.TotalMinutes)} Minuten")
                    }
                    else
                    {
                       @($"{modelAllowedMod.End.ToLocalTime():HH:mm} - {modelAllowedMod.Start.ToLocalTime():HH:mm}")
                    }
                </td>
                <td>
					@modelAllowedMod.IntervalSeconds
				</td>
                <td>
					@if (modelAllowedMod.Users.Any())
					{
						foreach (var user in modelAllowedMod.Users)
						{
							@user
							<br />
						}
					}
					else
					{
						<span>Top @modelAllowedMod.CountUser</span>
					}
				</td>
				<td>
					<a href="/API/SimpleGraph/@modelAllowedMod.Accesscode">!will be replaced by js!</a>
				</td>
				<td>
					<form asp-page-handler="DeleteGraph" method="Post">
						<input hidden="" name="id" value="@modelAllowedMod.Id" />
						<button type="submit" class="btn" value="submit request" onclick="return window.confirm(`Do you really want to remove the graph?`)">Löschen</button>
					</form>
				</td>
			</tr>
		}
	</tbody>
</table>