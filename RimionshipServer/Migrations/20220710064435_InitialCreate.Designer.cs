// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RimionshipServer.Services;

#nullable disable

namespace RimionshipServer.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220710064435_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("RimionshipServer.Models.FutureEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArrivalMode")
                        .HasColumnType("TEXT");

                    b.Property<long>("ColonyWealth")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Faction")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long>("ParticipantId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Points")
                        .HasColumnType("REAL");

                    b.Property<string>("Strategy")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ticks")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("Ticks");

                    b.ToTable("FutureEvents");
                });

            modelBuilder.Entity("RimionshipServer.Models.Participant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mod")
                        .HasColumnType("TEXT");

                    b.Property<string>("TwitchId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TwitchName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Mod");

                    b.HasIndex("TwitchId")
                        .IsUnique();

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("RimionshipServer.Models.Stat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Caravans")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Colonists")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColonistsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColonistsNeedTending")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Conditions")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("getdate()");

                    b.Property<float>("DamageDealt")
                        .HasColumnType("REAL");

                    b.Property<float>("DamageTakenPawns")
                        .HasColumnType("REAL");

                    b.Property<float>("DamageTakenThings")
                        .HasColumnType("REAL");

                    b.Property<int>("DownedColonists")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Electricity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Enemies")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fire")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Food")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GreatestPopulation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InGameHours")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MapCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MedicalConditions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Medicine")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MentalColonists")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumRaidsEnemy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumThreatBigs")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ParticipantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Prisoners")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rooms")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TamedAnimals")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Temperature")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Visitors")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wealth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeaponDps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WildAnimals")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("ParticipantId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("RimionshipServer.Models.Stat", b =>
                {
                    b.HasOne("RimionshipServer.Models.Participant", null)
                        .WithMany("Stats")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RimionshipServer.Models.Participant", b =>
                {
                    b.Navigation("Stats");
                });
#pragma warning restore 612, 618
        }
    }
}
